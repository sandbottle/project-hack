export declare enum OperationTypes {
    Arithmetic = 0,
    Assignment = 1,
    Comparison = 2,
    Logical = 3,
    Membership = 4
}
export declare type AssignmentOperators = "=" | "+=" | "-=" | "*=" | "/=" | "++" | "--";
export declare type ArithmeticOperators = "+" | "-" | "*" | "/" | "%" | "**" | "//";
export declare type ComparisonOperators = ">" | ">=" | "==" | "!=" | "<>" | "<" | "<=";
export declare type LogicalOperators = "and" | "or";
export declare type MembershipOperators = "in";
export declare type Operators = AssignmentOperators | ArithmeticOperators | ComparisonOperators | LogicalOperators | MembershipOperators;
export declare const OperatorsMap: Record<Operators, OperationTypes>;
export declare type Primitive = string | number | boolean | null;
export declare type ExpressionOperators = ArithmeticOperators | ComparisonOperators | LogicalOperators | MembershipOperators;
declare type ExpressionOperation = (l: Primitive, r: Primitive) => Primitive;
export declare const OperationFuncs: Record<ExpressionOperators, ExpressionOperation>;
export {};
//# sourceMappingURL=operators.d.ts.map